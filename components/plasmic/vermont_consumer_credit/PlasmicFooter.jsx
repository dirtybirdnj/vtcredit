// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9W67x2Pynxr9eDxjdLuGCS
// Component: R265Q5ctgGy
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import IconLink from "../../IconLink"; // plasmic-import: EjLZdJRjcnq/component
import TextInput from "../../TextInput"; // plasmic-import: b5fDbSitrgRQ/component
import Button from "../../Button"; // plasmic-import: jRx1E81mYCIy/component
import { useScreenVariants as useScreenVariantskcIfFDxm3XN2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: KCIfFDxm3xN2/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_vermont_consumer_credit.module.css"; // plasmic-import: 9W67x2Pynxr9eDxjdLuGCS/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: R265Q5ctgGy/css
import LogoIcon from "./icons/PlasmicIcon__Logo"; // plasmic-import: ajsvomRNRyt5/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 18moJXKn3z0E/icon
import TwitterIconIcon from "./icons/PlasmicIcon__TwitterIcon"; // plasmic-import: VeC2uT8KWQf7/icon
import GithubIconIcon from "./icons/PlasmicIcon__GithubIcon"; // plasmic-import: BmWl-acuNUPO/icon
import FacebookIconIcon from "./icons/PlasmicIcon__FacebookIcon"; // plasmic-import: X4N2ic5_a6uK/icon

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantskcIfFDxm3XN2()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(projectcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(projectcss.all, sty.freeBox__yi3Bm)} />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__uVzoE)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__jPby2)}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink__nSLhU)}
            icon={
              <LogoIcon
                className={classNames(projectcss.all, sty.svg__nNFb1)}
                role={"img"}
              />
            }
          />

          <div className={classNames(projectcss.all, sty.freeBox__cz9Q)}>
            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__xjgJ
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Terms"}
            </p.PlasmicLink>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__dGp5
              )}
            >
              {" Â· "}
            </div>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__dnXm
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Privacy"}
            </p.PlasmicLink>
          </div>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__o84Ev)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___95TUp)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__j47BP
              )}
            >
              {"Products"}
            </div>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__iatC
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Web Studio"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__iEAy
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"DynamicBox Flex"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__yd8Sd
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Programming Forms"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__uePVx
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Integrations"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link___7Eha9
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Command-line"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__lAoKd)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__nqeFq
              )}
            >
              {"Resources"}
            </div>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__ckcgv
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Documentation"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__zxIj0
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Tutorials & Guides"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__zaPwu
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Blog"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__xmGdk
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Support Center"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__sVbl
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Partners"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__yr1Hm)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qnsjn
              )}
            >
              {"Company"}
            </div>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__xnc0L
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Home"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__bHQz
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"About us"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__eB5G
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Company values"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__hsVf6
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Pricing"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                projectcss.a,
                projectcss.__wab_text,
                sty.link__n2Osm
              )}
              component={Link}
              href={"#"}
              platform={"nextjs"}
            >
              {"Privacy policy"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___2A8PO)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hyiwc
              )}
            >
              {"Subscribe"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hnw9H
              )}
            >
              {"Get the latest news and articles to your inbox every month."}
            </div>

            <TextInput
              data-plasmic-name={"textInput"}
              data-plasmic-override={overrides.textInput}
              className={classNames("__wab_instance", sty.textInput)}
              endIcon={
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  color={"clear"}
                  size={"compact"}
                  startIcon={
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__maBuw)}
                      role={"img"}
                    />
                  }
                >
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__qhFTd)}
                    role={"img"}
                  />
                </Button>
              }
              fontSize={"small"}
              placeholder={"Your email"}
              showEndIcon={true}
            />
          </p.Stack>
        </p.Stack>
      </p.Stack>

      <div className={classNames(projectcss.all, sty.freeBox___9BVlP)} />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__sZx0Z)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__pT9Mq)}
        >
          <p.PlasmicLink
            className={classNames(
              projectcss.a,
              projectcss.__wab_text,
              sty.link__rwOS
            )}
            component={Link}
            href={"/"}
            platform={"nextjs"}
          >
            {"Vermont Credit Counseling "}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              projectcss.a,
              projectcss.__wab_text,
              sty.link__ecLm4
            )}
            component={Link}
            href={"https://www.vtapi.co"}
            platform={"nextjs"}
          >
            {"vtapi.co"}
          </p.PlasmicLink>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__g19O6
            )}
          >
            {"All rights reserved."}
          </div>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__zilMx)}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink___0TFo)}
            icon={
              <TwitterIconIcon
                className={classNames(projectcss.all, sty.svg___1CfOu)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__kiQpe)}
            icon={
              <GithubIconIcon
                className={classNames(projectcss.all, sty.svg___3AkQm)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__sDoFd)}
            icon={
              <FacebookIconIcon
                className={classNames(projectcss.all, sty.svg___55Ypc)}
                role={"img"}
              />
            }
          />
        </p.Stack>
      </p.Stack>
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "textInput", "textbox", "button"],
  textInput: ["textInput", "textbox", "button"],
  button: ["button"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textInput: makeNodeComponent("textInput"),
    button: makeNodeComponent("button"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
