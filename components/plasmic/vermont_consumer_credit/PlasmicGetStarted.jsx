// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9W67x2Pynxr9eDxjdLuGCS
// Component: 6sPp355nJZ-s
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: mCxPr8fs96V/component
import FeatureCard from "../../FeatureCard"; // plasmic-import: 15TtZ6Zo0vI/component
import Button from "../../Button"; // plasmic-import: jRx1E81mYCIy/component
import Footer from "../../Footer"; // plasmic-import: R265Q5ctgGy/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_vermont_consumer_credit.module.css"; // plasmic-import: 9W67x2Pynxr9eDxjdLuGCS/projectcss
import sty from "./PlasmicGetStarted.module.css"; // plasmic-import: 6sPp355nJZ-s/css
import PencilIcon from "./icons/PlasmicIcon__Pencil"; // plasmic-import: eaPO9-Mdo-JO/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: k4l-Dm3c3qfC/icon
import CycleIcon from "./icons/PlasmicIcon__Cycle"; // plasmic-import: F1nfD4e8NqAk/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: gwsBLKJU83VD/icon

export const PlasmicGetStarted__VariantProps = new Array();

export const PlasmicGetStarted__ArgProps = new Array();

function PlasmicGetStarted__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Get Started"}</title>
        <meta key="og:title" property="og:title" content={"Get Started"} />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={"Get Started"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__pkR72
            )}
          >
            <React.Fragment>
              <React.Fragment>{""}</React.Fragment>
              {
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"Let's Get Started"}
                </h1>
              }

              <React.Fragment>{""}</React.Fragment>
            </React.Fragment>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__pmGiT
            )}
          >
            {
              "VCCC is dedicated to  providing pre-qualification consulting and linking consumers with professionals specializing in all areas of lending and banking. VT Consumer Credit assists their clients in becoming more desirable borrowers."
            }
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__zBWwd)}
          >
            <FeatureCard
              className={classNames("__wab_instance", sty.featureCard__ardgb)}
              description={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tQHg
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {"We sit with you in person to perform our "}
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecorationLine: "underline" }}
                    >
                      {"Intake"}
                    </span>
                    <React.Fragment>{" and "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecorationLine: "underline" }}
                    >
                      {"Comprehensive Assessment"}
                    </span>
                    <React.Fragment>
                      {" of your unique challenges."}
                    </React.Fragment>
                  </React.Fragment>
                </div>
              }
              iconFront={
                <PencilIcon
                  className={classNames(projectcss.all, sty.svg__lFmI)}
                  role={"img"}
                />
              }
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Urjr
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ol
                        data-plasmic-name={"ol"}
                        data-plasmic-override={overrides.ol}
                        className={classNames(
                          projectcss.all,
                          projectcss.ol,
                          sty.ol
                        )}
                      >
                        <li
                          data-plasmic-name={"li"}
                          data-plasmic-override={overrides.li}
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li
                          )}
                        >
                          {"Assessment"}
                        </li>
                      </ol>
                    }

                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              }
            />

            <FeatureCard
              className={classNames("__wab_instance", sty.featureCard__lPz17)}
              description={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fdt9L
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {"We work with you to build a "}
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecorationLine: "underline" }}
                    >
                      {"Sustainable Budget"}
                    </span>
                    <React.Fragment>
                      {" and determine a path towards "}
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecorationLine: "underline" }}
                    >
                      {"Affordability."}
                    </span>
                  </React.Fragment>
                </div>
              }
              iconFront={
                <HammerIcon
                  className={classNames(projectcss.all, sty.svg___8Dm1E)}
                  role={"img"}
                />
              }
              title={"2. Budget"}
            />

            <FeatureCard
              className={classNames("__wab_instance", sty.featureCard__bnf4Z)}
              description={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5RkCx
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Together we create an "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecorationLine: "underline" }}
                    >
                      {"Action Plan"}
                    </span>
                    <React.Fragment>{" for the best "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecorationLine: "underline" }}
                    >
                      {"Lender Match"}
                    </span>
                    <React.Fragment>{" and "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecorationLine: "underline" }}
                    >
                      {"Pre Qualification Approval"}
                    </span>
                  </React.Fragment>
                </div>
              }
              iconFront={
                <CycleIcon
                  className={classNames(projectcss.all, sty.svg__ccwRt)}
                  role={"img"}
                />
              }
              title={"3. Action Plan"}
            />
          </p.Stack>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__d9NQl)}
            >
              {true ? (
                <Button
                  className={classNames("__wab_instance", sty.button__cw9CC)}
                  color={"green"}
                  link={
                    "https://squareup.com/appointments/book/yvgq1psw8la7ua/LRZGPNNYCTN1M/start"
                  }
                  showEndIcon={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aLgoM
                    )}
                  >
                    {"Make an Appointment Today"}
                  </div>
                </Button>
              ) : null}

              <Button
                className={classNames("__wab_instance", sty.button__lVhRh)}
                endIcon={
                  <SearchsvgIcon
                    className={classNames(projectcss.all, sty.svg__k348)}
                    role={"img"}
                  />
                }
                showEndIcon={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hgtpr
                  )}
                >
                  {"Request More Information"}
                </div>
              </Button>
            </p.Stack>
          ) : null}

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "h1", "ol", "li", "footer"],
  header: ["header"],
  h1: ["h1"],
  ol: ["ol", "li"],
  li: ["li"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicGetStarted__ArgProps,
          internalVariantPropNames: PlasmicGetStarted__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicGetStarted__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGetStarted";
  } else {
    func.displayName = `PlasmicGetStarted.${nodeName}`;
  }
  return func;
}

export const PlasmicGetStarted = Object.assign(
  // Top-level PlasmicGetStarted renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    ol: makeNodeComponent("ol"),
    li: makeNodeComponent("li"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicGetStarted
    internalVariantProps: PlasmicGetStarted__VariantProps,
    internalArgProps: PlasmicGetStarted__ArgProps
  }
);

export default PlasmicGetStarted;
/* prettier-ignore-end */
